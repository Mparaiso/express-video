// Generated by CoffeeScript 1.7.1

/*
    Copyright Â© 2014 mparaiso <mparaiso@online.fr>. All Rights Reserved.
 */
var express, stores,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

stores = exports;

express = require('express');


/*
    Store Session in a mongoose model
 */

stores.MongooseSessionStore = (function(_super) {
  __extends(MongooseSessionStore, _super);

  function MongooseSessionStore(options, model) {
    this.model = model;
    MongooseSessionStore.__super__.constructor.apply(this, arguments);
  }

  MongooseSessionStore.prototype.all = function(callback) {
    return this.model.find(function(err, sessions) {
      if (sessions) {
        return callback(null, sessions.map(function(s) {
          return s.session;
        }));
      } else {
        return callback(err, sessions);
      }
    });
  };

  MongooseSessionStore.prototype.get = function(sid, callback) {
    return this.model.findOne({
      sid: sid
    }, function(err, session) {
      if (session) {
        return callback(null, session.session);
      } else {
        return callback(err, session);
      }
    });
  };

  MongooseSessionStore.prototype.set = function(sid, session, callback) {
    return this.model.findOneAndUpdate({
      sid: sid
    }, {
      session: session
    }, {
      upsert: true
    }).exec(callback);
  };

  MongooseSessionStore.prototype.destroy = function(sid, callback) {
    return this.model.findOneAndRemove({
      sid: sid
    }, callback);
  };

  MongooseSessionStore.prototype.length = function(callback) {
    return this.model.count(callback);
  };

  MongooseSessionStore.prototype.clear = function(callback) {
    return this.model.remove(callback);
  };

  MongooseSessionStore.prototype.toString = function() {
    return "[object MongooseSessionStore]";
  };

  return MongooseSessionStore;

})(express.session.Store);

//# sourceMappingURL=session-stores.map
